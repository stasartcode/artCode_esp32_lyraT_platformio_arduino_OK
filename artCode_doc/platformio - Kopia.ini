; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; [env:esp-wrover-kit]

; platform = espressif32
; board = esp-wrover-kit
; ; framework = espidf ; 36 sek kompilacja i działa
; framework = arduino ; 9 sek kompilacja i działa
; upload_port = COM2

[env:esp32-LyraT]
platform = espressif32
framework = arduino
board = esp32-LyraT
monitor_speed = 115200

upload_port = COM2

; setup build flags. 
; include the MP3 file
; include all include/ folders from all needed libs
; add the lib/ folder of the needed libraries to the search path
; select LYRAT_V4_3 as the board configuration (for GPIO pins)

; build_flags = 
	; -D CONFIG_ESP_LYRAT_V4_3_BOARD
	
	; -I lib/audio_hal/include
	; -I lib/audio_hal/board
	; -I lib/audio_hal/driver/es8374
	; -I lib/audio_hal/driver/es8388
	; -I lib/audio_hal/driver/zl38063
	; -I lib/audio_hal/driver/zl38063/api_lib
	; -I lib/audio_hal/driver/zl38063/example_apps
	; -I lib/audio_hal/driver/zl38063/firmware
	; -L lib/audio_hal/driver/zl38063/firmware
	; -lfirmware
	; -I lib/audio_pipeline/include
	; -I lib/audio_sal/include
	; -I lib/audio_stream/include
	; -I lib/esp_codec/include
	; -I lib/esp_codec/resample/include
	; -I lib/esp_codec/wav/include
	; -L lib/esp_codec/lib	
	; -lesp_codec
	; -I lib/esp_http_client/include
	; -I lib/esp_http_client/lib/include

	; -I lib/esp_peripherals/include
	; -I lib/esp_peripherals/lib/button
	; -I lib/esp_peripherals/lib/sdcard
	; -I lib/esp_peripherals/lib/touch

	; -I lib/audio_service/include

; tell the LDF to *not* use .a files for linking, but link the .o files in place
; this is necccessary because PIO generatates a "libesp_codec.a" file automatically,
; however, we also have another "libesp_codec.a" that we need to link -> name collision

; lib_archive = false 

; un-include the ESP-IDFs native esp_http_client library
; actually we should just use an older ESP-IDF version, but then the 
; include for the binary file breaks.. 
; lib was added to ESP-IDF with https://github.com/espressif/esp-idf/commit/ff528d13c7a24f3b5cb7937a41f6e1d8a921a99c#diff-c7c711c57aa3482655dd39165cf29087
; ESP-ADF fixes ESP-IDF at the 3.0 release.
; but with this, we can built ESP-ADF with the latest stable ESP-IDF! :)
; UPDATE: Even with the newest ESP-IDF version we still need this lib because esp_http_client_set_redirection()
; is only found in the ESP-ADF version but in the ESP-IDF's version..

; this should have actually worked, but it doesn't...
;build_unflags = -I"$PIOHOME_DIR/packages/framework-espidf/components/esp_http_client/include"

; CHANGE THIS PATH TO THE PLATFORMIO HOME DIRECTORY. 
; On Windows: Only change username. (C:\Users\<user>\.platformio)
; On Linux / Mac standard: /home/<user>/.platformio

; build_unflags = -I"C:/Users/stas/.platformio/packages/framework-espidf/components/esp_http_client/include"
;build_unflags = -I"$PIOHOME_DIR/packages/framework-espidf/components/esp_http_client/include"

; dependencies for this app
lib_deps =
  # Using a library name
  SdFat
	; audio_pipeline
	; audio_hal
	; audio_sal
	; audio_stream
	; esp_codec
	; esp_http_client
	; esp_peripherals
	; audio_service